services:
  employee-service:
    image: employee-app
    networks:
      - employee-network
    depends_on:
      - mysql-db
      - mongo
    build:
      context: .
      dockerfile: ./Dockerfile
    environment:
      - WAIT_HOSTS=mysql-db:3306
    ports:
      - "8093:8093"

  mysql-db:
    image: mysql:latest
    networks:
      - employee-network
    env_file: ./.env
    environment:
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_USER=$MYSQLDB_USER
      - MYSQL_PASSWORD=$MYSQLDB_PASSWORD
    ports:
      - "3306:3306"
    volumes:
      - ./_external_files/mysql-scripts.sql:/docker-entrypoint-initdb.d/mysql-scripts.sql

  mongo:
    image: mongo
    container_name: mongo-db
    networks:
      - employee-network
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGO_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD=$MONGO_ROOT_PASSWORD
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - ./database_to_delete/db:/data/db
      - ./database_to_delete/dev.archive:/Databases/dev.archive
      - ./database_to_delete/production:/Databases/production
      - ./_external_files/mongodb-scripts.js:/docker-entrypoint-initdb.d/mongodb-scripts.js

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    networks:
      - employee-network
    depends_on:
      - mongo
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=$MONGO_EXPRESS_ADMINUSERNAME
      - ME_CONFIG_MONGODB_ADMINPASSWORD=$MONGO_EXPRESS_ADMINPASSWORD
      - ME_CONFIG_MONGODB_URL=$MONGO_EXPRESS_MONGODB_URL
      - ME_CONFIG_BASICAUTH_USERNAME=$MONGO_EXPRESS_BASICAUTH_USERNAME
      - ME_CONFIG_BASICAUTH_PASSWORD=$MONGO_EXPRESS_BASICAUTH_PASSWORD
    links:
      - mongo
    restart: unless-stopped
    ports:
      - "8081:8081"

  prometheus:
    image: prom/prometheus:latest
    networks:
      - employee-network
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:latest
    networks:
      - employee-network
    container_name: grafana
    ports:
      - "3001:3000"
    restart: unless-stopped
    volumes:
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources

networks:
  employee-network:
    driver: bridge